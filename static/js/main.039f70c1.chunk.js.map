{"version":3,"sources":["assets/images/burger-logo.png","components/Logo/index.js","components/Navigation/NavigationItems/NavigationItem/index.js","components/Navigation/NavigationItems/index.js","components/Navigation/SideDrawer/DrawerToogle/index.js","components/Navigation/Toolbar/index.js","components/UI/BackDrop/index.js","components/Navigation/SideDrawer/index.js","components/Layout/Layout.js","components/Burger/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/index.js","components/Burger/BuildControls/index.js","components/UI/Modal/index.js","components/UI/Button/index.js","components/Burger/OrderSummary/index.js","axios-order.js","components/UI/Spinner/index.js","components/hoc/withErrorHandler/index.js","components/containers/BurgerBuilder/BurgerBulider.js","store/actions/actionTypes.js","components/Order/CheckoutSummary/index.js","components/UI/Input/index.js","components/containers/Checkout/ContactData/index.js","components/containers/Checkout/index.js","components/Order/index.js","components/containers/Orders/index.js","App.js","serviceWorker.js","store/reducers/burgetBuilder.js","index.js"],"names":["module","exports","Logo","props","className","src","burgerLogo","alt","NavigationItem","to","link","activeClassName","exact","name","NavigationItems","DrawerToggle","onClick","clicked","Toolbar","drawerToggleClick","BackDrop","show","close","SideDrawer","open","closed","Layout","state","showSideDrawer","slideDrawerCloseHanlder","isOpen","setState","this","children","React","Component","BurgerIngredient","ingredient","type","Burger","transformIngredient","Object","keys","ingredients","map","igkey","Array","_","i","key","reduce","arr","el","concat","burgerWithIngredient","length","BuildControl","label","removed","disabled","added","controls","BuildControls","price","ctrl","ingredientAdd","ingredientRemove","purchasable","ordered","Modal","style","transform","opacity","Button","OrderSummary","ingredientsSummary","totalPrice","continue","instance","axios","create","baseURL","spinner","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptors","interceptors","request","use","req","resInterceptors","response","res","eject","message","BurgerBulider","purchasing","loading","purchaseHandler","purchaseContinueHandler","history","push","sum","console","log","disableInfo","ings","Spinner","finalPrice","onIngredientsAdd","onIngredientsDelete","updatePurchaseState","connect","dispatch","ingredientName","CheckoutSummary","width","height","margin","checkoutCancel","checkoutContinue","Input","inputElem","validationError","inputClasses","invalid","touched","elementType","join","elementConfig","value","onChange","changeHandler","options","option","displayValue","ContactData","orderData","placeholder","validation","required","valid","buliding","zipcode","minLength","maxLength","country","email","deliveryMethod","orderHandler","e","preventDefault","formData","formValue","customerData","post","then","catch","elementChangeHandler","event","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidation","rules","isvalid","trim","formElements","id","config","onSubmit","formElement","Checkout","checkoutCancelHandler","goBack","checkoutContinueHandler","replace","path","match","component","Order","textTransform","display","border","padding","orders","get","respone","fetchOrders","data","order","App","Orders","Boolean","window","location","hostname","intialState","salad","bacon","cheese","meat","ingredientPrice","reducer","action","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.039f70c1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","import React from 'react';\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport './Logo.css';\n\nconst Logo = (props) => (\n    <div className='Logo'>\n        <img src={burgerLogo} alt=\"burgerLogo\" />\n    </div>\n);\nexport default Logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NavigationItem = (props) => (\n    <li className=\"NavigationItem\">\n       <NavLink\n            to={props.link} \n            activeClassName={`active`}\n            exact\n        >\n            {props.name}\n    </NavLink>\n    </li>\n);\nexport default NavigationItem;","import React from 'react';\nimport './NavigationItems.css';\nimport NavigationItem from './NavigationItem';\n\nconst NavigationItems = (props) => (\n    <ul className=\"NavigationItems\" >\n       <NavigationItem name={'Burger Builder'} link={'/'} />\n       <NavigationItem name={'Orders'} link={'/orders'} />\n    </ul>\n);\nexport default NavigationItems;","import React from 'react';\nimport './DrawerToggle.css';\n\nconst DrawerToggle = (props) => (\n    <div onClick={props.clicked} className=\"DrawerToggle\">\n        <div />\n        <div />\n        <div />\n    </div>\n);\n\nexport default DrawerToggle;","import React from 'react';\nimport './Toolbar.css';\nimport Logo from '../../Logo';\nimport NavigationItems from '../NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToogle';\n\nconst Toolbar = (props) => (\n    <header className=\"Toolbar\" >\n        <DrawerToggle clicked={props.drawerToggleClick} />\n        <div><Logo /></div>\n        <nav className=\"DesktopOnly\" >\n            <NavigationItems />\n        </nav>\n    </header>\n);\nexport default Toolbar;","import React from 'react';\nimport './Backdrop.css';\n\nconst BackDrop = (props) => (\n    props.show ? <div className=\"BackDrop\" onClick={()=> props.close(false) } >X</div> : null\n);\nexport default BackDrop;\n","import React, { Fragment } from 'react';\nimport Logo from '../../Logo';\nimport NavigationItems from '../NavigationItems';\nimport './SideDrawer.css';\nimport BackDrop from '../../UI/BackDrop';\n\nconst SideDrawer = (props) => {\n    return (\n        <Fragment>\n            <BackDrop show={props.open} close={props.closed} />\n            <div className={`SideDrawer ${props.open ? 'Open' : 'Close'} `} >\n                <Logo />\n                <nav>\n                    <NavigationItems />\n                </nav>    \n            </div>\n        </Fragment>\n    );\n};\nexport default SideDrawer;","import React, { Fragment } from 'react';\nimport './Layout.css';\nimport Toolbar from '../Navigation/Toolbar';\nimport SideDrawer from '../Navigation/SideDrawer';\n\nclass Layout extends React.Component {\n    state = {\n        showSideDrawer: false\n    }\n    slideDrawerCloseHanlder = (isOpen) => {\n        this.setState({ showSideDrawer: !!isOpen });       \n    }\n\n    \n    render() {\n        return(\n            <Fragment>\n                <Toolbar drawerToggleClick={this.slideDrawerCloseHanlder} />\n                <SideDrawer open={this.state.showSideDrawer} closed={this.slideDrawerCloseHanlder} />\n                <main className=\"content\" >\n                    {this.props.children}\n                </main>\n            </Fragment>\n        );\n    }\n}\nexport default Layout;","import React  from 'react';\nimport PropTypes from 'prop-types';\nimport './BurgerIngredient.css';\n\nconst BurgerIngredient = (props) => {\n    let ingredient = null;\n    switch(props.type) {\n        case ('bread-bottom') : {\n            ingredient = <div className='BreadBottom'></div>;\n            break;\n        }\n        case ('bread-top') : {\n            ingredient = (<div className='BreadTop'>\n                <div className=\"Seeds1\" />\n                <div className=\"Seeds2\" />\n            </div>);\n            break;\n        }\n        case ('meat') : {\n            ingredient = <div className='Meat'></div>;\n            break;\n        }\n        case ('cheese') : {\n            ingredient = <div className='Cheese'></div>;\n            break;\n        }\n        case ('salad') : {\n            ingredient = <div className='Salad'></div>;\n            break;\n        }\n        case ('bacon') : {\n            ingredient = <div className='Bacon'></div>;\n            break;\n        }\n        default:\n            ingredient = null;\n    }\n    return ingredient;\n};\n\nBurgerIngredient.propTypes =  {\n    type: PropTypes.string.isRequired,\n}\nexport default BurgerIngredient;","import React from 'react';\nimport BurgerIngredient from './BurgerIngredient';\nimport './burger.css';\n\nconst Burger = (props) => {\n    const transformIngredient = Object.keys(props.ingredients)\n    .map(igkey => {\n        return [...Array(props.ingredients[igkey])].map((_, i) => {\n            return <BurgerIngredient key={igkey +i} type={igkey} />\n        });\n    }).reduce((arr, el) => {\n        return arr.concat(el)\n    }, []);\n    const burgerWithIngredient = transformIngredient.length === 0 ? <p>Please add Ingredient</p> : transformIngredient\n    return (\n        <div className=\"burger\">\n            <BurgerIngredient type=\"bread-top\" />\n            {burgerWithIngredient}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    )\n};\nexport default Burger;","import React from 'react';\nimport './BuildControl.css';\n\nconst BuildControl = (props) => (\n    <div className=\"BuildControl\">\n        <div className=\"Label\" >{props.label}</div>\n        <button className=\"Less\" onClick={props.removed} disabled={props.disabled} >Less</button>\n        <button className=\"More\" onClick={props.added} >More</button>\n    </div>\n);\n\nexport default BuildControl;","import React from 'react';\nimport BuildControl from './BuildControl';\nimport './BuildControls.css';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n];\n\nconst BuildControls = (props) => (\n    <div className=\"burgerControls\"> \n        <p>Current Price: <strong>{props.price}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label} \n                added={() => props.ingredientAdd(ctrl.type)}\n                removed={() => props.ingredientRemove(ctrl.type)}\n                disabled={props.disabled[ctrl.type]}\n            />\n        ))}\n        <button \n            className=\"OrderButton\"\n            disabled={!props.purchasable}\n            onClick={() =>props.ordered(true)}\n        >Order Now</button>\n    </div>\n);\n\nexport default BuildControls;","import React, {Fragment} from 'react';\nimport './Modal.css';\nimport BackDrop from '../BackDrop';\n\nconst Modal  = (props) => {\n    return (\n        <Fragment>\n            <BackDrop show={props.show} close={props.close} />\n            <div className=\"Modal\" \n                style={{\n                    transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                    opacity: props.show ? '1': '0'\n                }}\n            >\n                {props.children}\n            </div>\n        </Fragment>    \n    );\n};\nexport default Modal;","import React from 'react';\nimport './button.css';\n\nconst Button = (props)=> (\n    <button\n        onClick={props.clicked}\n        className={`Button ${props.className}`}\n        >{props.name}</button>);\nexport default Button;","import React, {Fragment} from 'react';\nimport Button from '../../UI/Button';\n\nconst OrderSummary = (props) => {\n    const ingredientsSummary = Object.keys(props.ingredients)\n        .map(igkey =>  {\n            return <li key={igkey} >\n                <span>{igkey}</span>: {props.ingredients[igkey]}\n            </li>\n        })\n    ;\n    return (\n        <Fragment>\n            <h3>Order Summary</h3>\n            <p>A Burger with the following ingredients:</p>\n            <ul>\n                {ingredientsSummary}\n            </ul>\n            <p><strong>Total Price: {props.totalPrice}</strong></p>\n            <p>Continue to Checkout?</p>\n            <Button clicked={() => props.close(false)} className='Danger' name='Cancel' />\n            <Button clicked={props.continue} className='Success' name='Continue' />\n        </Fragment>\n    )\n};\nexport default OrderSummary;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://butmill.firebaseio.com/'\n});\nexport default instance;","import React from 'react';\nimport './spinner.css';\n\nconst spinner = () => <div className=\"loader\">Loading...</div>;\n\nexport default spinner;","import React, { Fragment } from 'react';\nimport Modal from '../../UI/Modal';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends React.Component  {\n        state = {\n            error : null\n        }\n        UNSAFE_componentWillMount () {\n            this.reqInterceptors  = axios.interceptors.request.use(req => {\n                this.setState({ error: null });\n                return req;\n            })\n            this.resInterceptors  =axios.interceptors.response.use(res => res, error => {\n                this.setState({ error: error });\n            })\n        }\n\n        componentWillUnmount () {\n            axios.interceptors.request.eject(this.reqInterceptors);\n            axios.interceptors.request.eject(this.resInterceptors);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null});\n        }\n\n        render() {\n            return (\n                <Fragment>\n                    <Modal \n                        show= {this.state.error}\n                        close={this.errorConfirmedHandler}\n                    >\n                        { this.state.error ? this.state.error.message : null }\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Fragment>    \n            )\n        }\n    }\n};\n\nexport default withErrorHandler;","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport Burger from '../../Burger/Burger';\nimport BuildControls from '../../Burger/BuildControls';\nimport Modal from '../../UI/Modal';\nimport OrderSummary from '../../Burger/OrderSummary';\nimport axios from '../../../axios-order';\nimport Spinner from '../../UI/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler';\nimport { ADD_INGREDIENTS, REMOVE_INGREDIENT } from '../../../store/actions/actionTypes';\n\nclass BurgerBulider extends React.Component {\n    state = {\n        purchasable: false,\n        purchasing: false,\n        loading: false,\n        error: null\n    }\n\n    componentDidMount() {\n        // axios.get('https://butmill.firebaseio.com/ingredient.json')\n        //     .then(response => {\n        //         this.setState({ ingredients: response.data })\n        //         this.updatePurchaseState(response.data)       \n        //     })\n        //     .catch(error => {\n        //         this.setState({error: true});\n        //     })    \n        // ;\n    }\n\n    updatePurchaseState (ingredients) {\n        const sum = Object.keys(ingredients)\n            .map(igkey => {\n                return ingredients[igkey]\n            }).reduce((sum, el) => {\n                console.log(\"check ===> \",sum, el);\n                return sum+el;\n            },0);\n        return sum >0;\n\n    }\n\n    purchaseHandler = (isOpen) => {\n        this.setState({purchasing: isOpen});\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.history.push('/checkout');\n    }\n\n    render() {\n        const disableInfo = {\n            ...this.props.ings\n        };\n        for(var key in disableInfo) {\n            disableInfo[key] = disableInfo[key] <= 0;\n        }\n        return (\n            <Fragment>\n                <Modal show={this.state.purchasing} close={this.purchaseHandler} >\n                    { this.state.loading && <Spinner /> }\n                    {!this.state.loading && this.props.ings && <OrderSummary \n                        ingredients={this.props.ings} \n                        close={this.purchaseHandler} \n                        continue={this.purchaseContinueHandler}\n                        totalPrice={this.props.finalPrice}\n                    />}\n                </Modal>\n                { !this.props.ings && <Spinner /> }\n                { this.props.ings &&\n                    <Fragment>\n                        <Burger ingredients={this.props.ings} />\n                        <BuildControls \n                            ingredientAdd={this.props.onIngredientsAdd} \n                            ingredientRemove={this.props.onIngredientsDelete}\n                            disabled={disableInfo}\n                            price={this.props.finalPrice}\n                            purchasable={this.updatePurchaseState(this.props.ings)}\n                            ordered = {this.purchaseHandler}\n                        />\n                    </Fragment>    \n                }\n                {this.state.error && <p>ingredient's can't loaded...!!!</p> }\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n        finalPrice: state.totalPrice,\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientsAdd : (ingredient) => dispatch({ type: ADD_INGREDIENTS, ingredientName: ingredient }),\n        onIngredientsDelete : (ingredient) => dispatch({ type: REMOVE_INGREDIENT, ingredientName: ingredient }),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBulider, axios));","export const ADD_INGREDIENTS = 'ADD_INGREDIENTS';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\n","import React from 'react';\nimport './checkoutSummary.css';\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button';\n\nconst CheckoutSummary = (props) => {\n    return (\n        <div className=\"checkoutsummary\" >\n            <h1>We hope it tasted!!</h1>\n            <div style={{width: '300px', height: '300px', margin: 'auto' }} >\n                <Burger ingredients={props.ingredients} />\n            </div>\n            <Button \n                className=\"Danger\"\n                clicked={props.checkoutCancel} name=\"CANCEL\" />\n            <Button className=\"Success\" clicked={props.checkoutContinue} name=\"Continue\" />\n        </div>\n    );\n}\nexport default CheckoutSummary;","import React from 'react';\nimport './input.css';\n\nconst Input = (props) => {\n    let inputElem = '';\n    let validationError = null;\n    const inputClasses = ['inputElem'];\n\n    if(props.invalid && props.touched) {\n        inputClasses.push('error');\n        validationError = <p className=\"ValidationError\">Please enter a valid value!</p>;\n    }\n\n    switch(props.elementType) {\n        case 'input' : {\n            inputElem = <input \n                            className={inputClasses.join(' ')}\n                            {...props.elementConfig}\n                            value={props.value}  \n                            onChange={props.changeHandler} />\n            break;\n        }\n        case 'textarea': {\n            inputElem = <textarea \n                            className={inputClasses.join(' ')}\n                            {...props.elementConfig}\n                            value={props.value} \n                            onChange={props.changeHandler} />\n            break;\n        }\n        case 'select': {\n            inputElem = (\n                        <select \n                            className={inputClasses.join(' ')}\n                            value={props.value} \n                            onChange={props.changeHandler}>\n                            { props.elementConfig.options.map(option => (\n                                <option key={option.value} value={option.value} >\n                                    {option.displayValue}\n                                </option>\n                            )) }    \n                            </select>\n                        )\n            break;\n        }     \n        default : {\n            inputElem = <input \n                            className={inputClasses.join(' ')}\n                            {...props.elementConfig}\n                            value={props.value} \n                            onChange={props.changeHandler} />\n            break;\n        }\n    }\n\n    return (\n        <div className=\"input\" >\n            <label className=\"label\">{props.label}</label>\n            {inputElem}\n            {validationError}\n        </div>\n    )\n}\nexport default Input;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../../UI/Button';\nimport './contactData.css';\nimport axios from '../../../../axios-order';\nimport Spinner from '../../../UI/Spinner';\nimport Input from '../../../UI/Input';\n\nclass ContactData extends React.Component {\n    state = {\n        orderData: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            buliding: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Building'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            zipcode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your zipcode'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6,\n                    maxLength: 10,\n                },\n                valid: false,\n                touched: false,\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your country'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your E-mail'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastes', displayValue: 'Fastes'},\n                        {value: 'regular', displayValue: 'Regular'},\n                    ]\n                },\n                value: '',\n                validation: {},\n                valid: true,\n            },\n        },\n        loading: false,\n    }\n\n    checkValidation(value, rules) {\n        let isvalid = true;\n        \n        if(rules.required) {\n            isvalid = value.trim() !== '' && isvalid ;\n        }\n        if(rules.minLength) {\n            isvalid = value.length >= rules.minLength && isvalid;\n        }\n\n        if(rules.maxLength) {\n            isvalid = value.length <= rules.maxLength && isvalid;\n        }\n\n        return isvalid;\n    }\n\n    orderHandler = (e) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        const formData = {};\n        const formElement =  Object.keys(this.state.orderData);\n        formElement.map(formValue => (\n            formData[formValue] = this.state.orderData[formValue].value\n        ));\n        const orderData = {\n            ingredients: this.props.ingredients,\n            price: this.props.price,\n            customerData: formData,\n        };\n        \n        axios.post('/orders.json',orderData)\n            .then(response => {\n                this.setState({ loading: false });\n                this.props.history.push('/');\n            })\n            .catch(error => {\n                this.setState({ loading: false });\n            });\n    }\n    elementChangeHandler = (event, inputIdentifier ) => {\n        const updatedOrderForm = {\n            ...this.state.orderData\n        }\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier],\n            value: event.target.value,\n            touched: true,\n        }\n        updatedFormElement.valid = this.checkValidation(updatedFormElement.value, updatedFormElement.validation);\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n        console.log(updatedFormElement);\n        this.setState({ orderData: updatedOrderForm});\n        \n    }\n    render() {\n        const formElements = [];\n        const formData = Object.keys(this.state.orderData);\n        formData.map(key => (\n            formElements.push({\n                id: key,\n                config: this.state.orderData[key]\n            })\n        ));\n        return (    \n            <div className=\"contactData\" >\n                <h3>Enter Your Contact Data</h3>\n                <h2><strong>{this.props.price}</strong> </h2>\n                { this.props.loading ? <Spinner /> : \n                    <form onSubmit={this.orderHandler} >\n                        { formElements.map(formElement =>(\n                            <Input \n                                key={formElement.id}\n                                elementType={formElement.config.elementType}\n                                elementConfig={formElement.config.elementConfig}\n                                value={formElement.config.value}\n                                invalid={!formElement.config.valid}\n                                touched={formElement.config.touched}\n                                changeHandler={(event) =>this.elementChangeHandler(event, formElement.id)}\n                            />\n                        )) }\n                        <Button name=\"Order\" className=\"Success\" />\n                    </form>    \n                }\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        ingredients: state.ingredients,\n        price: state.totalPrice,\n    }\n}\nexport default connect(mapStateToProps)(ContactData);","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CheckoutSummary from '../../Order/CheckoutSummary';\nimport ContactData from './ContactData';\n\nclass Checkout extends React.Component {\n    \n    checkoutCancelHandler = () =>  {\n        this.props.history.goBack();\n    }\n    checkoutContinueHandler = () => {\n        this.props.history.replace('/checkout/contact-data');\n    }\n    render() {\n        return (\n            <div>\n                <CheckoutSummary \n                    ingredients={this.props.ings} \n                    checkoutCancel={this.checkoutCancelHandler}\n                    checkoutContinue={this.checkoutContinueHandler}\n                />\n                <Route path={`${this.props.match.path}/contact-data`} component={ContactData} />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.ingredients,\n    }\n}\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\nimport './order.css';\n\nconst Order = (props) => {\n    return(\n        <div className=\"order\" >\n            <p>Ingredients: {\n                Object.keys(props.ingredients).map(ingredient => (\n                    <span \n                        style={{\n                            textTransform: 'capitalize',\n                            display: 'inline-block',\n                            margin :'0 8px',\n                            border: '1px solid #ccc',\n                            padding: '5px'\n                        }}\n                        key={ingredient} >{ingredient}{`{${props.ingredients[ingredient]}}`}</span>\n                ))\n            } </p>\n            <p>Price: <strong>USD {props.price}</strong> </p>\n        </div>\n    )};\n\nexport default Order;","import React from 'react';\nimport Order from '../../Order';\nimport axios from '../../../axios-order';\nimport withErrorHandler from '../../hoc/withErrorHandler';\n\nclass Orders extends React.Component {\n\n    state = {\n        orders: [],\n        loading: true,\n    }\n\n    componentDidMount()  {\n        axios.get('/orders.json')\n            .then(respone => {\n                const fetchOrders=  [];\n                const responseData = Object.keys(respone.data);\n                responseData.map(key =>(\n                    fetchOrders.push({\n                        ...respone.data[key],\n                        id: key\n                    })\n                ));\n                this.setState({ loading: false, orders: fetchOrders });\n            })\n            .catch(error => {\n                console.log(error);\n                this.setState({ loading: false });\n            })\n    }\n\n    render() {\n        console.log(this.state.orders);\n        return (\n            <div>\n                { this.state.orders.map(order => (\n                    <Order key={order.id} {...order} />\n                )) }\n            </div>\n        )\n    }\n}\n\nexport default withErrorHandler(Orders, axios);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Layout from './components/Layout/Layout';\nimport BurgerBulider from './components/containers/BurgerBuilder/BurgerBulider';\nimport Checkout from './components/containers/Checkout';\nimport Orders from './components/containers/Orders';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout>\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" component={Orders} />    \n          <Route path=\"/\" component={BurgerBulider} />\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_INGREDIENTS, REMOVE_INGREDIENT } from '../actions/actionTypes';\n\nconst intialState = {\n    ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n    },\n    totalPrice: 15\n}\n\nconst ingredientPrice = {\n    salad: 5,\n    bacon: 10,\n    cheese: 15,\n    meat: 20 \n}\n\nconst reducer = ( state= intialState, action ) => {\n    switch(action.type) {\n        case ADD_INGREDIENTS : \n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n                },\n                totalPrice: state.totalPrice+ingredientPrice[action.ingredientName],\n            }  \n        case REMOVE_INGREDIENT :\n            return {\n                ...state,\n                ingredients: {\n                    ...state.ingredients,\n                    [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n                },\n                totalPrice: state.totalPrice-ingredientPrice[action.ingredientName],\n            }\n        \n        default : return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducers/burgetBuilder';\n\nconst store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nconst app = (\n    <Provider store={store} >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>    \n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}